# =================================================================
# MCP OnBotGo Configuration
# =================================================================

# Google Identity Toolkit Configuration
# Obtener desde Google Cloud Console > APIs & Services > Credentials
GOOGLE_API_KEY=AIzaSyAXtP5xZXh3glObbvk6FHMbfe1o0_9dVwY
GOOGLE_CLIENT_ID=tu_client_id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=tu_client_secret
GOOGLE_REDIRECT_URI=https://tu-app.com/oauth/callback

# OnBotGo APIs Configuration
# URLs base de tus APIs existentes
APIAIM_BASE_URL=https://apiaim.mibot.cl
INTRANET_BASE_URL=https://apiintranet.mibot.cl

# Tokens de sesión por defecto (formato JSON string)
# Ejemplo: '{"project_uid":"vnbLnzdM0b3BDClTPVPL","client_uid":"lEvxdkHyFXdOX4ieEMHs"}'
DEFAULT_MIBOT_SESSION='{"project_uid":"tu_project_uid","client_uid":"tu_client_uid"}'

# MCP Server Configuration
MCP_SERVER_NAME=OnBotGo Task Manager
MCP_SERVER_VERSION=1.0.0
MCP_HOST=localhost
MCP_PORT=8000

# Database Configuration
# Para desarrollo local usar SQLite
DATABASE_URL=sqlite:///./mcp_onbotgo.db
# Para producción usar PostgreSQL:
# DATABASE_URL=postgresql://user:password@localhost:5432/mcp_onbotgo

# Redis Configuration (para caché y sesiones)
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_DB=0

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/mcp_onbotgo.log

# AI and Analytics Configuration
OPENAI_API_KEY=tu_openai_api_key
OPENAI_MODEL=gpt-4o-mini
MAX_TOKENS=4000

# Security Configuration
SECRET_KEY=tu_secret_key_muy_segura_de_32_caracteres_minimo
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Features Flags
ENABLE_AI_ANALYSIS=true
ENABLE_REAL_TIME_NOTIFICATIONS=true
ENABLE_AUTOMATIC_ASSIGNMENT=true
ENABLE_CLIENT_AUTO_DETECTION=true
ENABLE_PERFORMANCE_METRICS=true

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# Development Configuration
DEBUG=true
TESTING=false
DEVELOPMENT=true